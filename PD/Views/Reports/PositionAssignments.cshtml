@model IEnumerable<PD.Models.PositionAssignment>
@using PD.Models.Compensations;
@using PD.Models.AppViewModels.Filters;

<h2>Positions</h2>

@{
    DataProtector dp = ViewBag.DataProtector as DataProtector;
    PositionFilter filter = ViewBag.Filter as PositionFilter;
}

@Html.EditorFor(model => filter, new { controller = "reports", action = "positions" })

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Person.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Person.EmployeeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Position.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayName("Projected Base Salary")
            </th>
            <th>
                @Html.DisplayName("Actual Base Salary")
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            string name = dp.Decrypt(item.Person.Name);
            string startDate = item.Position.StartDate.HasValue ? item.Position.StartDate.Value.ToString("yyyy-MM-dd") : "";
            string endDate = item.Position.EndDate.HasValue ? item.Position.EndDate.Value.ToString("yyyy-MM-dd") : "";

            var projectedBaseSalary = item.GetCompensation<Salary>(filter.Date, true);
            string projectedBaseSalaryVal = projectedBaseSalary != null ? projectedBaseSalary.Value.ToString() : "";

            var actualBaseSalary = item.GetCompensation<Salary>(filter.Date, false);
            string actualBaseSalaryVal = actualBaseSalary != null ? actualBaseSalary.Value.ToString() : "";


            <tr>
                <td>
                    @Html.DisplayFor(modelItem => name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Person.EmployeeId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Position.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => startDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => endDate)
                </td>
                <td>
                    @Html.DisplayFor(model => projectedBaseSalaryVal)
                </td>
                <td>
                    @Html.DisplayFor(model => actualBaseSalaryVal)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
