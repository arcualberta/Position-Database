<h2>People</h2>

@*
    Child rows in tables: https://datatables.net/examples/api/row_details.html
*@
<div id="peoplePanel" class="col-sm-6 pd-panel">
    <div class="panel panel-default">
        <div class="panel-heading">Employees</div>
        <div class="panel-body">
            <table id="peopleTable" class="display" style="width:100%">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Employee Id</th>
                    </tr>
                </thead>
                @*<tfoot>
                        <tr>
                            <th>Name</th>
                            <th>Employee Id</th>
                        </tr>
                    </tfoot>*@
            </table>
        </div>
    </div>
</div>
<div class="col-sm-6 pd-panel">
    <h4 id="personDetailsHead">Select an employee from the list.</h4>
    <div id="personInfo">
    </div>
</div>
<div class="clear"></div>
<script>
    $(function () {

        // peopleTable - initialization
        $('#peopleTable').dataTable({
            select: {
                style: 'single'
            },
            "iDisplayLength": 100,
            "sPaginationType": "full_numbers",
            processing: true,
            serverSide: true,
            info: false,
            "scrollY": "400px",
            "scrollCollapse": true,
            ajax: {
                url: '/api/people',
                type: "post",
                contentType: "application/json",
                data: function (d) {
                    // note: d is created by datatable, the structure of d is the same with DataTableParameters model above
                    //console.log(d);
                    return JSON.stringify(d);
                }
                ////DEBUG: Enable the following "success" handler to show data on the console instead of on the table.
                //, success: function (response) { console.log(response); res = response; }
            },
            "columns": [
                { "data": "name" },
                { "data": "empId" }
            ],
            rowId: "id"
        }); //ENDS: $('#peopleTable').dataTable({ xxx

        // peopleTable - on selection of a row
        var peopleTable = $('#peopleTable').DataTable();
        peopleTable.on('select', function (e, dt, type, indexes) {
            if (type === 'row') {
                var id = peopleTable.rows(indexes).data().pluck('id')[0];
                var name = peopleTable.rows(indexes).data().pluck('name')[0]
                //console.log(id);

                $('#personDetailsHead').html(name);

                loadPositionInfo(id)
            }
        }); //ENDs: peopleTable.on('select, xxx

        peopleTable.on('deselect', function (e, dt, type, indexes) {
            if (type === 'row') {
                $('#personDetailsHead').html('Select an employee from the list.');
                $('#personInfo').html('');
            }
        }); //ENDs: peopleTable.on('deselect, xxx

        // positionAssignmentsTable - Initialization
        ////////$('#positionAssignmentsTable').dataTable({
        ////////    paging: false,
        ////////    searching: false,
        ////////    ordering: false,
        ////////    processing: true,
        ////////    serverSide: true,
        ////////    info: false,
        ////////    "deferLoading": 0, //Makes sure the ajax call is not made during initilization.
        ////////    ajax: {
        ////////        url: '',
        ////////        type: "post",
        ////////        contentType: "application/json",
        ////////        data: function (d) {
        ////////            // note: d is created by datatable, the structure of d is the same with DataTableParameters model above
        ////////            //console.log(d);
        ////////            return JSON.stringify(d);
        ////////        }
        ////////        ////DEBUG: Enable the following "success" handler to show data on the console instead of on the table.
        ////////        //, success: function (response) { console.log(response); res = response; }
        ////////    },
        ////////    "columns": [
        ////////        { "data": "positionTitle" }
        ////////    ],
        ////////    rowId: "id",
        ////////    "drawCallback": function (settings) { // Ref: https://datatables.net/reference/option/drawCallback
        ////////        console.log(settings);
        ////////    }
        ////////}); //ENDS: $('#positionAssignmentsTable').dataTable({ xxx

        ////////// positionAssignmentsTable - preDraw event
        ////////// Ref: https://datatables.net/reference/event/preDraw#top
        ////////var startTime;
        ////////$('#positionAssignmentsTable').on('preDraw.dt', function (e, settings) {

        ////////    startTime = new Date().getTime();
        ////////}).on('draw.dt', function (e, settings) {
        ////////    console.log('Redraw took at: ' + (new Date().getTime() - startTime) + 'mS');
        ////////});

    }); //ENDS: $(function () { xxxx

    // This method is invoked when a person is selected from the people table
    function loadPositionInfo(personId) {

        ////////var table = $('#positionAssignmentsTable').DataTable();
        ////////table.ajax.url('/api/people/' + personId).load();

        $.ajax({
            url: '/api/people/' + personId,
            type: "get",
            contentType: "application/json",
            dataType: "json",
            success: function (data, status, jqXHR) {
                showPositionInfo(data);
            },
            error: function (jqXHR, status, err) {
                console.error(err);
            },
        });
    }

    function showPositionInfo(data) {
        $('#personInfo').html('');
        $.each(data, function (idx, pos) {
            var panel = createPositionPanel(pos);
            $('#personInfo').append(panel);
        });
    }

    function createPositionPanel(posAssignment) {
        var panel = $('<div class="panel panel-default"></div>');
        panel.attr('id', 'pa-' + posAssignment.id);

        var panelHeading = $('<div class="panel-heading"><b>' + posAssignment.position.title + '</b> | ' + posAssignment.position.primaryDepartment.name + '</div>');
        panel.append(panelHeading);

        var panelBody = $('<div class="panel-body"></div>')
        panel.append(panelBody);

        var timeDelimitedGroups = [];

        //Iterating through all compensations and creating a list of time-delimited panels. Each panel
        //lists all compensation types applicable to that time interval along with their propoerty details.
        $.each(posAssignment.compensations, function (idx, comp) {
            var start = comp.startDate == undefined ? "" : comp.startDate.substr(0, 10);
            var stop = comp.endDate == undefined ? "" : comp.endDate.substr(0, 10);
            var key = start + ' to ' + stop; //key used to uniquely identify a time-delimited panel
            var yearRange = start.substr(0, 4) + ' - ' + stop.substr(0, 4);

            //taking the correct time-delimited panel for this compensation object
            var matchedCompensation = timeDelimitedGroups.find(x => x.interval === key)

            //Creating a new panel and adding it to the array of panels if it hasn't been created yet.
            if (matchedCompensation == undefined) {
                matchedCompensation = { interval: key };
                matchedCompensation.value = $('<div class="panel panel-default pd-inner-panel"></div>');
                matchedCompensation.value.append($('<div class="panel-heading"><b>' + yearRange + '</b></div>'));
                matchedCompensation.value.append($('<div class="panel-body"><div>Period: ' + key + '</div>'));
                timeDelimitedGroups.push(matchedCompensation);
            }

            //Taking the body of the 
            var container = $(matchedCompensation.value).children('.panel-body');

            //Adding the information about the current compensation into the selected time-delimited panel.
            var compensationType = comp.$type;
            compensationType = compensationType.substr(0, compensationType.lastIndexOf(','));
            compensationType = compensationType.substr(compensationType.lastIndexOf('.') + 1);
            var indicator = comp.isProjection ? "<span style='color:red'>*</span>" : "";
            switch (compensationType) {
                case "Salary":
                    container.append($('<div>Salary: $' + comp.value.toLocaleString("en") + indicator+ '</div>'));
                    break;
                case "Adjustment":
                    container.append($('<div>' + comp.name + ': $' + comp.value.toLocaleString("en") + indicator + '</div>'));
                    break;
                case "ContractSettlement":
                    container.append($('<div>ATB: $' + comp.value.toLocaleString("en") + indicator + '</div>'));
                case "Merit":
                    container.append($('<div>Merit Decision: ' + comp.meritDecision + indicator + '</div>'));
                    container.append($('<div>Merit: $' + comp.value.toLocaleString("en") + indicator + '</div>'));
                    break;
                default:
                    container.append($('<div>' + comp.name + ': $' + comp.value.toLocaleString("en") + indicator + '</div>'));
                    break;
            }

//            var compPanel = createCompensationPanel(comp);
//            panelBody.append(compPanel);
        });

        //Sorting time intervals in the reverse chronological order.
        timeDelimitedGroups.sort((a, b) => (a.interval < b.interval) ? 1 : -1);

        $.each(timeDelimitedGroups, function (key, item) {
            panel.append(item.value);
        });

        return panel;
    }


    ////function createCompensationPanel(comp) {
    ////    var panel = $('<div class="panel panel-default"></div>');
    ////    panel.attr('id', 'pa-' + comp.id);

    ////    //Creating compensation panel header
    ////    var compensationType = comp.$type;
    ////    compensationType = compensationType.substr(0, compensationType.lastIndexOf(','));
    ////    compensationType = compensationType.substr(compensationType.lastIndexOf('.') + 1);
    ////    var panelHeading = $('<div class="panel-heading"><b>' + compensationType + '</b></div>');
    ////    panel.append(panelHeading);

    ////    //Creating compensation panel body
    ////    var compDetails = $('<div class="panel-body error"></div>');
    ////    panel.append(compDetails);

    ////    var startDate = $('<div>Start Date: ' + comp.startDate + '</div>');
    ////    compDetails.append(startDate);

    ////    var endDate = $('<div>End Date: ' + comp.endDate + '</div>');
    ////    compDetails.append(endDate);

    ////    var value;

    ////    switch (compensationType) {
    ////        case "Salary":
    ////            value = $('<div>Salary: ' + comp.value + '</div>');
    ////            compDetails.append(value);
    ////            break;
    ////        case "Adjustment":
    ////            value = $('<div>' + comp.name + ': ' + comp.value + '</div>');
    ////            compDetails.append(value);
    ////            break;
    ////        case "ContractSettlement":
    ////            value = $('<div>ATB: ' + comp.value + '</div>');
    ////            compDetails.append(value);
    ////            break;
    ////        case "Merit":
    ////            value = $('<div>Merit: ' + comp.value + '</div>');
    ////            compDetails.append(value);
    ////            break;
    ////        default:
    ////            compDetails = $('<div class="panel-body error">Unknown compensation type: ' + compensationType + '</div>');
    ////            break;
    ////    }

    ////    compDetails.append(value);

    ////    if (comp.notes != undefined && comp.notes != "") {
    ////        var amount = $('<div>Notes: ' + comp.notes + '</div>');
    ////        compDetails.append(amount);
    ////    }

    ////    return panel;
    ////}

</script>



@*<div class="panel panel-default">
    <div class="panel-heading">Position Details</div>
    <div class="panel-body">

        <div id="person-info">

            <table id="positionAssignmentsTable" class="display" style="width:100%">
                <thead>
                    <tr>
                        <th>Position</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>*@